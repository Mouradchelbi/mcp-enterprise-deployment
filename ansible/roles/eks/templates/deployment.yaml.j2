---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ environment }}
  labels:
    name: {{ environment }}
    project: {{ project_name }}
---
apiVersion: v1
kind: Secret
metadata:
  name: mcp-server-db-secret
  namespace: {{ environment }}
type: Opaque
stringData:
  database_url: "{{ database_url }}"
  redis_url: "{{ redis_url }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-server
  namespace: {{ environment }}
  labels:
    app: mcp-server
    environment: {{ environment }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-server
  template:
    metadata:
      labels:
        app: mcp-server
        environment: {{ environment }}
    spec:
      containers:
      - name: mcp-server
        image: {{ ecr_registry }}/{{ ecr_repository }}:{{ git_commit }}
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: mcp-server-db-secret
              key: database_url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: mcp-server-db-secret
              key: redis_url
        - name: ENVIRONMENT
          value: "{{ environment }}"
        - name: AWS_REGION
          value: "{{ aws_region }}"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-server-service
  namespace: {{ environment }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
  labels:
    app: mcp-server
    environment: {{ environment }}
spec:
  type: LoadBalancer
  selector:
    app: mcp-server
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  sessionAffinity: None
  externalTrafficPolicy: Cluster